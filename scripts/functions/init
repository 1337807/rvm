#!/usr/bin/env bash

__rvm_load_rvmrc()
{
  [[ ${rvm_ignore_rvmrc:-0} -eq 1 ]] && return 0

  for rvmrc in /etc/rvmrc $HOME/.rvmrc ; do

    if [[ -f "$rvmrc" ]] ; then

      if \grep -q '^\s*rvm .*$' $rvmrc ; then

        rvm_error "$rvmrc is for rvm settings only.\
          \nrvm CLI may NOT be called from within $rvmrc.\
          \nSkipping the loading of $rvmrc"

        return 1

      else

        source "$rvmrc"

      fi

    fi

  done

  return 0
}

# Initialize rvm, ensuring that the path and directories are as expected.
__rvm_initialize()
{
  rvm_ruby_load_path="."
  rvm_ruby_require=""

  true ${rvm_scripts_path:="$rvm_path/scripts"}
  source "$rvm_scripts_path/base"

  __rvm_clean_path ; __rvm_conditionally_add_bin_path ; export PATH

  if [[ ! -d "${rvm_tmp_path:-/tmp}" ]] ; then
    \mkdir -p "${rvm_tmp_path}"
  fi

  return 0
}

__rvm_setup()
{
  # ZSH has 1 based array indexing, bash has 0 based.
  if [[ -n "${ZSH_VERSION:-""}" ]] ; then
    __shell_array_start=1
    # Set clobber for zsh users, for compatibility with bash's append operator ( >> file ) behavior
    setopt | \grep -qs '^noclobber$'
    rvm_zsh_clobber=$?
    setopt clobber
    # Set no_nomatch so globs that don't match any files don't print out a warning
    setopt | \grep -qs '^nonomatch$'
    rvm_zsh_nomatch=$?
    setopt no_nomatch
  else
    __shell_array_start=0 # bash array indexes are 0 based.
  fi ; export __shell_array_start
}

