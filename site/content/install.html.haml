%a{ :name => "install" }
%a{ :name => "installation" }
%a{ :name => "installing" }
%h1
  Installing rvm
%p
  There are at least 3 ways to install rvm.
%h2
  Installing from a gem
%p
  First install the gem. After the gem has installed run the rvm-install script.
%pre.code
  :preserve
    $ gem sources -a http://gemcutter.org/ # If you do not have gemcutter as a source, add it!
    $ gem install rvm            # Install the rvm gem
    $ rvm-install                # Install rvm, adds hooks for bash & zsh
    $ source ~/.rvm/scripts/rvm  # load the new code into your current shell
%p
  Note that if your gem bin directory is not in your path you will have to use the full path to the script.
  For example,
%pre.code
  :preserve
    cd ~/.gem/ruby/1.8/gem/rvm-0.0.58/ && scripts/install
%h2
  Github Repository
%p
  To install from the github repository:
%pre.code
  :preserve
    git clone git://github.com/wayneeseguin/rvm.git && cd rvm && ./install
%h2
  Installing from a source tarball
%pre.code
  :preserve
    curl -O http://rvm.beginrescueend.com/src/rvm-0.0.66.tar.gz && tar zxf rvm-0.0.66.tar.gz && cd rvm-0.0.66 && ./install
    # or using wget:
    wget http://rvm.beginrescueend.com/src/rvm-0.0.66.tar.gz && tar zxf rvm-0.0.66.tar.gz && cd rvm-0.0.66 && ./install

%h3
  NOTE
%p
  If rvm-install is not found it is likely because your users gem home is not in your path. You can add it to your path by putting this in your ~/.bashrc &amp; ~/.bash_profile
%pre.code
  :preserve
    ∴ cat ~/.bash_profile | grep PATH
    PATH=$PATH:~/.gem/ruby/1.8/bin ; export $PATH
%p
  Alternatively you can call it manually:
%pre.code
  :preserve
    ∴ ~/.gem/ruby/1.8/bin/rvm-install
    (rvm installs :) )

%h1 Install on Use
%p
  If you would like rvm to automatically install a ruby when you use it simply add the flag to your rvmrc file:
%pre.code
  :preserve
    ∴ cat ~/.rvmrc
    rvm_install_on_use_flag=1

%h1 Compile Flags
%p
  If you need to pass compile flags for the compile process you can simply set the corresponding environment variables.
  For example with ruby 1.9.1 to enable gdb:
%pre.code
  :preserve
    ∴ optflags="-O0 -ggdb" rvm install 1.9.1

