= Patchsets for RVM

== About

Over time, I have developed a number of patches to MRI ruby which I use in all my
projects. I maintain them using stgit. This repository provides them as patchsets for RVM.

== Usage

First install the patchsets into your RVM path:

* clone the repository to some convenient place
* cd into the top level directory
* run install.sh

This will automatically remove old versions of the patchsets.

Second, reinstall the rubies you want to patch:

  rvm install 1.8.7 --force --patch railsexpress
  rvm install 1.9.2 --force --patch railsexpress

Alternatively, you can pass the ruby version to reinstall to the install script:

  ./install.sh 1.8.7 1.9.2

IF you don't want to mess up your vanilly rubies, pass a -n flag to rvm when installing
the patches:

  rvm install 1.8.7 --force --patch railsexpress -n railsexpress
  rvm install 1.9.2 --force --patch railsexpress -n railsexpress

This will thn require to specify the ruby version for rvm like so:

  rvm use 1.9.2-railsexpress

== Notes

Ruby 1.8.7 patchlevel should be at least 320.
Ruby 1.9.2 patchlevel must be at least 180.

To enable heap dump support, pass the --enable-gcdebug option to the rvm install command.

  rvm install 1.8.7 --force --patch railsexpress -C --enable-gcdebug -n gcdebug
  rvm install 1.9.2 --force --patch railsexpress -C --enable-gcdebug -n gcdebug

If rvm cannot configure your ruby, update your rvm install.

== Credits

Some of the patches are based on the work of others (some of them are included in ruby
enterprise edition)

* sigvtalrm patch: http://timetobleed.com/ruby-threading-bugfix-small-fix-goes-a-long-way
* malloc size tracking: http://blog.pluron.com/2008/02/memory-profilin.html
* object allocation tracking: http://rubyforge.org/tracker/index.php?func=detail&aid=11497&group_id=426&atid=1700
* caller for all threads: http://ph7spot.com/musings/caller-for-all-threads
* load performance patch: https://github.com/ruby/ruby/commit/9ce69e7cef1272c86a93eeb9a1888fe6d2a94704#load.c
